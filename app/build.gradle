apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
//apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin :'com.google.dagger.hilt.android'
kapt {
    correctErrorTypes = true
}
apply plugin: 'realm-android'
//apply plugin: 'com.google.gms.google-services'
//apply plugin: 'com.google.firebase.crashlytics'

apply plugin: "androidx.navigation.safeargs.kotlin"


android {

    sourceSets {
        androidTest {
            java.srcDirs += "src/sharedTest/java"
        }
        test {
            java.srcDirs += "src/sharedTest/java"
        }
    }

    compileSdkVersion 33
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
//        useIR = true
    }
    defaultConfig {
        applicationId "com.arosara.anisaw"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 17
        versionName "0.5.0"
        vectorDrawables.useSupportLibrary = true
        archivesBaseName = "AnimexStream-v$versionName"
        testInstrumentationRunner "net.xblacky.animexstream.AXSTestRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        viewBinding true
    }
    splits {

        // Configures multiple APKs based on ABI.
        abi {

            // Enables building multiple APKs per ABI.
            enable true
            // By default all ABIs are included, so use reset() and include to specify that we only
            // want APKs for x86 and x86_64.
            // Resets the list of ABIs that Gradle should create APKs for to none.
            reset()
            // Specifies a list of ABIs that Gradle should create APKs for.
            include "x86", "armeabi-v7a", "arm64-v8a", "x86_64"
            // Specifies that we do not want to also generate a universal APK that includes all ABIs.
            universalApk true
        }
    }


}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1'
    implementation("com.google.android.material:material:1.9.0")


    //Card View
    implementation "androidx.cardview:cardview:1.0.0"
    implementation "androidx.recyclerview:recyclerview:1.3.0"

    //For HTML Parsing
    implementation 'org.jsoup:jsoup:1.16.1'

    //For Network Request
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.11'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.11'

    //Gson
    implementation 'com.google.code.gson:gson:2.10.1'

    //For Managing Memory Leaks & Data
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.21'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.9.0'

    //Logging Library
    implementation 'com.jakewharton.timber:timber:5.0.1'

    //Epoxy For Complex Recycler View
    implementation 'com.airbnb.android:epoxy:5.1.3'
    kapt 'com.airbnb.android:epoxy-processor:5.1.3'

    //For Image Loading
    implementation 'com.github.bumptech.glide:glide:4.15.1'
    kapt 'com.github.bumptech.glide:compiler:4.15.1'

    //Flow layout
    implementation 'org.apmem.tools:layouts:1.10@aar'

    //Exo Player
    implementation 'com.google.android.exoplayer:exoplayer:2.18.7'
    implementation 'com.google.android.exoplayer:extension-mediasession:2.18.7'
    implementation 'com.google.android.exoplayer:extension-okhttp:2.18.7'

    //Expandable TextView
    implementation 'com.ms-square:expandableTextView:0.1.4'

    //Animation
    implementation 'com.daimajia.androidanimations:library:2.4@aar'


    //Navigation Library
    def nav_version = "2.5.3"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"


    //Dependency Injections
    implementation("com.google.dagger:hilt-android:2.46.1")
    kapt("com.google.dagger:hilt-android-compiler:2.46.1")

    //Apache Commons
    implementation 'org.apache.commons:commons-lang3:3.12.0'


    //Test Dependencies
    testImplementation 'junit:junit:4.13.2'
    testImplementation "com.google.truth:truth:1.1.3"
    testImplementation 'com.squareup.okhttp3:mockwebserver:5.0.0-alpha.11'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.1'
    testImplementation "androidx.arch.core:core-testing:2.2.0"


    //Instrumented Test Dependencies
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation("androidx.test:core-ktx:1.5.0")
    debugImplementation("androidx.fragment:fragment-testing:1.5.7")
    androidTestImplementation('com.google.dagger:hilt-android-testing:2.46.1')
    androidTestImplementation('org.mockito:mockito-core:5.3.1')
    androidTestImplementation('androidx.test.espresso:espresso-core:3.5.1')

}
